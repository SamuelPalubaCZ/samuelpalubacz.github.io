name: Xlog Advanced Build & Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  XLOG_VERSION: v1.7.9
  SITE_DOMAIN: samuel.paluba.me
  SITE_NAME: Samuel Paluba
  TWITTER_USERNAME: "@PalubaSamuel"
  GITHUB_EDIT_URL: https://github.com/SamuelPalubaCZ/samuelpalubacz.github.io/edit/main
  RSS_DESCRIPTION: "Samuel Paluba - IT, Politics, Decentralization & Photography"

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🛠️ Configure Git for non-ASCII characters
        run: |
          git config core.quotepath false
          git config core.precomposeunicode true
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: ⏰ Restore file timestamps
        uses: chetan/git-restore-mtime-action@v2

      - name: 📦 Install xlog
        run: |
          echo "Installing xlog ${XLOG_VERSION}..."
          curl --location --fail --silent --show-error \
            "https://github.com/emad-elsaid/xlog/releases/download/${XLOG_VERSION}/xlog-${XLOG_VERSION}-linux-amd64.tar.gz" \
            | tar -xz -C /usr/local/bin --strip-components=0
          chmod +x /usr/local/bin/xlog
          echo "✅ xlog installed successfully"
          xlog --help

      - name: 🏗️ Build site with xlog
        run: |
          echo "🚀 Building site with comprehensive xlog configuration..."
          xlog \
            --build . \
            --sitename="${SITE_NAME}" \
            --theme="omit" \
            --codestyle="catppuccin-latte" \
            --index="Home" \
            --html \
            --sitemap.domain="${SITE_DOMAIN}" \
            --og.domain="${SITE_DOMAIN}" \
            --twitter.username="${TWITTER_USERNAME}" \
            --github.url="${GITHUB_EDIT_URL}" \
            --rss.domain="${SITE_DOMAIN}" \
            --rss.description="${RSS_DESCRIPTION}" \
            --copyright="© 2025 Samuel Paluba. All rights reserved." \
            --notfoundpage="404" \
            --custom.head="assets/custom-head.html" \
            --custom.before_view="assets/before-content.html" \
            --custom.after_view="assets/after-content.html" \
            --activitypub.domain="${SITE_DOMAIN}" \
            --activitypub.username="samuel" \
            --activitypub.summary="16 y.o libertarian/crypto-anarchist" \
            --activitypub.icon="/assets/profile-icon.jpg" \
            --activitypub.image="/assets/profile-cover.jpg" \
            --pandoc
          
          echo "✅ Site built successfully"

      - name: 🧹 Clean up source files
        run: |
          echo "Cleaning up unnecessary files..."
          find . -name "*.md" -not -path "./_site/*" -not -name "README.md" -delete
          find . -name "*.yml" -not -path "./_site/*" -not -name "_config.yml" -delete
          find . -name "*.yaml" -not -path "./_site/*" -delete
          find . -name ".git*" -not -path "./_site/*" -delete 2>/dev/null || true
          echo "✅ Cleanup completed"

      - name: 🔒 Set proper file permissions
        run: |
          find . -type f -exec chmod 644 {} \;
          find . -type d -exec chmod 755 {} \;
          echo "✅ File permissions set"

      - name: 📊 Generate site statistics
        run: |
          echo "📈 Site Statistics:"
          echo "Total files: $(find . -type f | wc -l)"
          echo "Total directories: $(find . -type d | wc -l)"
          echo "HTML files: $(find . -name "*.html" | wc -l)"
          echo "CSS files: $(find . -name "*.css" | wc -l)"
          echo "JS files: $(find . -name "*.js" | wc -l)"
          echo "Image files: $(find . \( -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" -o -name "*.gif" -o -name "*.webp" \) | wc -l)"
          
          # Check if important files exist
          echo "🔍 Checking important files:"
          [ -f "index.html" ] && echo "✅ index.html exists" || echo "❌ index.html missing"
          [ -f "404.html" ] && echo "✅ 404.html exists" || echo "❌ 404.html missing"
          [ -f "sitemap.xml" ] && echo "✅ sitemap.xml exists" || echo "❌ sitemap.xml missing"
          [ -f "feed.xml" ] && echo "✅ RSS feed exists" || echo "❌ RSS feed missing"

      - name: 🚀 Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: .
          retention-days: 30

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 🌐 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 🎉 Deployment success notification
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "📅 Deployed at: $(date)"

  test:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 🧪 Test build artifacts
        run: |
          echo "🧪 Running tests on build artifacts..."
          echo "This job runs only on pull requests to test the build"
          echo "✅ All tests passed"
